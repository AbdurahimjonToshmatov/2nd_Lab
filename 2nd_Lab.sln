using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace Lab_2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string vvod;

            #region 1 level 2
            Console.WriteLine("Введите координату х");
            vvod = Console.ReadLine();
            if (double.TryParse(vvod, out double x))
            {
                Console.WriteLine("Введите координату y");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double y))
                {
                    if (y >= 0 && y + Math.Abs(x) <= 1)
                    {
                        Console.WriteLine("Эта точка лежит внутри треугольника");
                    }
                    else Console.WriteLine("Эта точка не лежит внутри треугольника");
                }
                else Console.WriteLine("Введите допустимое значение у");

            }
            else Console.WriteLine("Введите допустимое значение х");
            #endregion

            #region 1 level 3
            Console.WriteLine("Введите значение a");
            vvod = Console.ReadLine();
            if (double.TryParse(vvod, out double a))
            {
                Console.WriteLine("Введите значение b");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double b))
                {
                    if (a != b)
                    {
                        if (a > 0 && a > b)
                        {
                            Console.WriteLine($"Значение с = {a} ");
                        }
                        else if (a > 0 && a < b)
                        {
                            Console.WriteLine($"Значение с = {b} ");
                        }
                        else if (a <= 0 && a > b)
                        {
                            Console.WriteLine($"Значение с = {b}");
                        }
                        else Console.WriteLine($"Значение с = {a}");
                    }
                    else Console.WriteLine($"Т.к. a = b, то c будет равно {a}");
                }
                else Console.WriteLine("Введите корректное значение b");
            }
            else Console.WriteLine("Введите корректное значение а");

            #endregion

            #region 1 level 4
            Console.WriteLine("Введите значение a");
            vvod = Console.ReadLine();
            if (double.TryParse(vvod, out a))
            {
                Console.WriteLine("Введите значение b");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double b))
                {
                    Console.WriteLine("Введите значение c");
                    vvod = Console.ReadLine();
                    if (double.TryParse(vvod, out double c))
                    {
                        double[] spisok1 = { a, b };
                        double[] spisok2 = { spisok1.Min(), c };
                        double z = spisok2.Max();
                        Console.WriteLine($"Значение z = {z}");
                    }
                    else Console.WriteLine("Такое значение с недопустимо");
                }
                else Console.WriteLine("Такое значение b недопустимо");
            }
            else Console.WriteLine("Такое значение а недопустимо");
            #endregion

            #region 2 level 1
            int n = 5;
            Console.WriteLine("Сколько девочек в классе?");
            vvod = Console.ReadLine();
            if (int.TryParse(vvod, out int girl) && girl >= 0 && girl <= n)
            {
                double s_m = 0, s_d = 0; int error_d = 0, error_m = 0;
                for (int i = 1; i <= girl; i++)
                {
                    Console.WriteLine($"Введите рост {i}й девочки (в см)");
                    vvod = Console.ReadLine();
                    if (int.TryParse(vvod, out int hight) && hight > 0)
                    {
                        s_d = s_d + hight;
                    }
                    else
                    {
                        Console.WriteLine("Некорректно");
                        error_d++;
                    }
                }

                for (int i = 1; i <= (n - girl); i++)
                {
                    Console.WriteLine($"Введите рост {i}го мальчика (в см)");
                    vvod = Console.ReadLine();
                    if (int.TryParse(vvod, out int hight))
                    {
                        s_m = s_m + hight;
                    }
                    else
                    {
                        Console.WriteLine("Некорректно");
                        error_m++;
                    }
                }
                if (girl > 0)
                {
                    double sr_hight = s_d / (girl - error_d);
                    Console.WriteLine($"Cредний рост девочек - {sr_hight}");
                }
                else Console.WriteLine("Девочек нет");
                if (n - girl > 0)
                {
                    double sr_hight = s_m / (n - girl - error_m);
                    Console.WriteLine($"Cредний рост мальчиков - {sr_hight}");
                }
            }
            else Console.WriteLine("Вы ввели недопустимое значение");

            #endregion

            #region 2 level 9
            n = 5;
            double min = 1000000;
            for (int i = 1; i <= n; i++)
            {
                Console.WriteLine($"Введите время, за которое проплыл 200м {i}й пловец");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double time) && time > 0)
                {
                    if (time < min) min = time;
                }
                else Console.WriteLine("Введено неверно - в базу не внесено");
            }
            Console.WriteLine($"Лучший результат - {min}");
            #endregion

            #region 3 level 4
            const int r1 = 5, r2 = 10; int hit = 0; n = 0;
            while (vvod != "Стоп" && vvod != "стоп")
            {
                n = n + 1;
                Console.WriteLine($"Координата x {n}й точки (если не хотите продолжать, напишите 'Cтоп')");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out x))
                {
                    Console.WriteLine($"Координата у {n}й точки");
                    vvod = Console.ReadLine();
                    if (double.TryParse(vvod, out double y))
                    {
                        if (x * x + y * y >= r1 * r1 && x * x + y * y <= r2 * r2 && r1 < r2) hit++;
                    }
                    else Console.WriteLine("Неверный y");
                }
                else if (vvod == "Стоп" || vvod == "стоп") continue;
                else Console.WriteLine("Неверный х");
            }
            Console.WriteLine($"Будут внутри кольца - {hit} точек");
            #endregion

            #region 3 level 11
            double s_grade = 0, s_student; int bad = 0, error = 0;
            n = 0;
            vvod = "";
            while (vvod != "Стоп" && vvod != "стоп")
            {
                s_student = 0;
                n = n + 1;
                Console.WriteLine($"Введите 4 оценки {n}го студента (если ученики закончились, то напишите 'Стоп')");
                vvod = Console.ReadLine();
                if (int.TryParse(vvod, out int grade1) && grade1 > 1 && grade1 <= 5)
                {
                    s_student = s_student + grade1;
                }
                else if (vvod == "Стоп" || vvod == "стоп") continue;
                else error++;

                vvod = Console.ReadLine();
                if (int.TryParse(vvod, out int grade2) && grade2 > 1 && grade2 <= 5)
                {
                    s_student = s_student + grade2;
                }
                else error++;
                vvod = Console.ReadLine();
                if (int.TryParse(vvod, out int grade3) && grade3 > 1 && grade3 <= 5)
                {
                    s_student = s_student + grade3;
                }
                else error++;
                vvod = Console.ReadLine();
                if (int.TryParse(vvod, out int grade4) && grade4 > 1 && grade4 <= 5)
                {
                    s_student = s_student + grade4;
                }
                else error++;
                if ((grade1 == 2) || (grade2 == 2) || (grade3 == 2) || (grade4 == 2))
                {
                    bad++;
                }
                else s_grade = s_grade + s_student;
            }
            Console.WriteLine($"Неуспевающих учеников (у кого хоть 1 экзамен на 2) - {bad}. Cредний балл - {s_grade / (4 * (n - 1) - error - bad * 4)} ");
            #endregion

            #region 3 level 12
            double S; vvod = ""; n = 0;
            while (vvod != "Стоп" && vvod != "стоп")
            {
                n = n + 1;
                Console.WriteLine($"Введите {n}e значение r (для прекращения напишите 'Стоп')");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double r) && r > 0)
                {
                    Console.WriteLine("Площадь чего вы хотите посчитать? Варианты: 'квадрат','круг','треугольник'");
                    vvod = Console.ReadLine();
                    switch (vvod)
                    {
                        case ("квадрат"):

                            S = r * r;
                            Console.WriteLine($"Площадь квадрата с данной стороной - {S}");
                            break;

                        case ("круг"):

                            S = Math.PI * r * r;
                            Console.WriteLine($"Площадь круга с данным радиусом - {S}");
                            break;

                        case ("треугольник"):

                            S = r * r * Math.Sqrt(3) / 2;
                            Console.WriteLine($"Площадь треугольника с данной стороной - {S}");
                            break;

                        case ("Стоп"):

                            goto Exit;

                        case ("стоп"):

                            goto Exit;

                        default:
                            Console.WriteLine($"Неверно введено название");
                            break;



                    }
                }
                else if (vvod == "Стоп" || vvod == "стоп") break;
                else Console.WriteLine("Неверное значение r");

            }
        Exit:
            #endregion

            #region 3 level 13
            vvod = ""; n = 0;
            while (vvod != "Стоп" && vvod != "стоп")
            {
                n = n + 1;
                Console.WriteLine($"Введите {n}e значение А (если хотите прекратить - 'Стоп')");
                vvod = Console.ReadLine();
                if (double.TryParse(vvod, out double A) && A > 0)
                {
                    Console.WriteLine($"Введите {n}e значение B");
                    vvod = Console.ReadLine();
                    if (double.TryParse(vvod, out double B) && B > 0)
                    {
                        Console.WriteLine("Площадь чего вы хотите посчитать? Варианты: 'прямоугольник','кольцо','треугольник'");
                        vvod = Console.ReadLine();
                        switch (vvod)
                        {
                            case ("прямоугольник"):
                                S = A * B;
                                Console.WriteLine($"Площадь прямоугольника с данными сторонами - {S}");
                                break;

                            case ("кольцо"):

                                S = Math.Abs(Math.PI * A * A - Math.PI * B * B);
                                Console.WriteLine($"Площадь кольца с данными радиусами - {S}");
                                break;

                            case ("треугольник"):

                                S = A * 0.5 * Math.Sqrt(B * B - (A * A / 4));
                                Console.WriteLine($"Площадь треугольника с данными сторонами - {S}");
                                break;
                            case ("Стоп"):
                                goto Exit2;
                            case ("стоп"):
                                goto Exit2;
                            default:
                                Console.WriteLine("Неправильный указатель");
                                break;
                        }
                    }
                    else Console.WriteLine("Неверное значение В");
                }
                else if (vvod == "стоп" || vvod == "Стоп") continue;
                else Console.WriteLine("Неверное значение А -> значение В пропущено автоматически");
            }

            Exit2:;          

        }
                    
    }
}

            #endregion

            
       